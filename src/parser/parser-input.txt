int# : integer -> 12 // variable declaration, -> is the assignment operator, types are specificed, mutability operator (#) includable
// newline characters (like semicolons in C-langs) are absent

str : someFunction -> (str arg1; str arg2) { // function declaration, return type is specified as well as argument types
     return arg1 + arg2 // string concatenation can be done with pluses
}

array[int] : someIntegerArray -> <<1, 2, 3>> // array declaration
var dict[str] :  someStringDictionary -> <<"indice1": "first"; "indice2": "second">> // dictionary declaration
var array[any] :  anyKindOfType -> <<1, "2", true>> // the "any" type allows for looser typing, which lets arrays and other values have mutable types

integer ++ // increments by one
integer -- // decrements by one

integer += x // shorthand for integer = integer + x
integer -= x // shorthand for integer = integer - x
integer *= x // shorthand for integer = integer * x
integer /= x // shorthand for integer = integer / x

integer^x // raises to a power of x (e.x 2^2 = 4)
// as well as basic math functions like x * y, x / y, x + y, x - y
// includes boolean operators like
//      x < y,  (less than)
//      x == y, (equals)
//      x != y, (not equals)
//      x > y,  (greater than)
//      x <= y, (less than or equal to
//      x >= y, (greater than or equal to)
//      x || y, (or)